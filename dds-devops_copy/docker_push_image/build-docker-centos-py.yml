var_sources:
  - name: vault
    type: vault
    config:
      url: https://vault.sdp.refinitiv.com
      client_token: ((auth-token))
      path_prefix: /concourse

  - name: repository
    type: dummy
    config:
      vars:
        bams: ((vault:kv/bams))

resources:
  - name: concourse
    type: git
    icon: git
    source:
      uri: git@git.sami.int.thomsonreuters.com:data_distribution_snowflake/dds_sdp_devops.git
      branch: function-app-deployment-almagest
      private_key: ((vault:kv/git-service-cred.private-key))
  - name: final-image
    type: registry-image
    icon: docker
    source:
      repository: bams-aws.refinitiv.com:5001/a250315/docker-repo/pipeline
      tag: centos-python-image
      username: ((repository:bams.username))
      password: ((repository:bams.password))

jobs:
  - name: build-tools
    serial: true
    plan:
      - get: concourse
        params:
          depth: 1

      - in_parallel:
        - task: build-image
          privileged: true
          config:
            platform: linux
            image_resource:
              type: registry-image
              source:
                repository: karlkfi/concourse-dcind
            inputs:
              - name: concourse
            outputs:
              - name: docker-image
            params:
              IMAGE_REPOSITORY: local-repo
              IMAGE_TAG: local-image
            run:
              path: entrypoint.sh
              args:
                - bash
                - -c
                - |
                  BASE_DIR=$(pwd)
                  IMG_TAG="${IMAGE_REPOSITORY}:${IMAGE_TAG}"
                  cd  concourse/pipelines/Dockerfiles
                  find .
                  pwd
                  ls -l
                  docker build . -t $IMG_TAG
                  cd ${BASE_DIR}
                  docker save -o docker-image/image-ubuntu.tar $IMG_TAG

      - in_parallel:
        - put: final-image
          params:
            image: docker-image/image-ubuntu.tar
