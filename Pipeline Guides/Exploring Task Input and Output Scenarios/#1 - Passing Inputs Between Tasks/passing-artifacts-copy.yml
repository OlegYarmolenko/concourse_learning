# We have here a lot of examples concourse features:
# First is using YAML anchors,
# Second - using task config files from remote repo,
# Third - inputs&uptputs(its just a folders actually),
# Fourth - using vars with task files(they can replace vars in task files but not in con
# fig which is described directly in pipe. To use vars in pipe you can use vars from 
# var_sources),
# Fifth - using var_sources(another way to use variables, instead of using varsfile, we 
# can store our variables in dummy var_sources, as if its separate YAML file with vars.),


busybox: &busybox #YAML anchor
  type: registry-image
  source:
    repository: busybox

resources:
- name: ci
  type: git
  source:
    uri: https://github.com/OlegYarmolenko/concourse_learning

var_sources:
- name: dumb
  type: dummy
  config:
    vars:
      simple: hello!
      user:
        username: big
        password: sekrit

jobs:
- name: the-job
  plan:
  - get: ci
    trigger: true
    params:
      ECHO_ME: "Eat your fruits"
      ALSO_ME: "veggies"
  - task: create-one-output
    file: ci/Pipeline Guides/Exploring Task Input and Output Scenarios/#1 - Passing Inputs Between Tasks/create-one-output.yml
    vars:
      my-var: "Cookies are the best"
      second-var: "chips are a close second"
  - task: read-ouput-from-previous-step
    config:
      platform: linux
      image_resource: *busybox
      # You must explicitly name the inputs you expect
      # this task to have.
      # If you don't then outputs from previous steps
      # will not appear in the` step's container.
      # The name must match the output from the previous step.
      # Try removing or renaming the input to see what happens!
      inputs:
        - name: the-output
      outputs:
        # Concourse will make an empty dir with this name
        # and save the contents for later steps
        - name: the-output2
      run:
        path: /bin/sh
        args:
          - -cx
          - |
            pwd
            ls -lah
            cat ./the-output/file

- name: next-job-serial-true
  serial: true
  plan:
  - get: ci
    passed:
    - the-job
    trigger: true
  - task: task-print-ls-pwd
    config:
      platform: linux
      image_resource: *busybox
      run:
        path: /bin/sh
        args:
          - -cx
          - |
            ls -lah
            pwd
            echo username: ((dumb:user.username))

- name: next-job-serial-true2
  serial: true
  plan:
  - get: ci
    passed:
    - the-job
    trigger: true

  - in_parallel:
    - task: task-print-ls-pwd
      config:
        platform: linux
        image_resource: *busybox
        params:
          ECHO_ME: "default text to echo from task config file"
          ALSO_ME:
        run:
          path: /bin/sh
          args:
            - -cx
            - |
              ls -lah
              pwd
              echo ${ECHO_ME} and ${ALSO_ME}
    - task: task-print-date
      config:
        platform: linux
        image_resource: *busybox
        run:
          path: /bin/sh
          args:
            - -cx
            - |
              date